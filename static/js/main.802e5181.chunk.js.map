{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","formError","setFormError","onSubmit","event","preventDefault","length","type","placeholder","value","onChange","target","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.802e5181.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './NewMovie.scss';\n\ninterface Movie {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n}\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [formError, setFormError] = useState(false);\n\n  const formClear = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (\n      title.length > 0\n      && description.length > 0\n      && imgUrl.length > 0\n      && imdbUrl.length > 0\n      && imdbId.length > 0\n    ) {\n      const movie: Movie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      setFormError(false);\n      onAdd(movie);\n      formClear();\n    } else {\n      setFormError(true);\n    }\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={handleSubmit}\n    >\n      <label className=\"form__label\">\n        Title:\n        {' '}\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={event => {\n            return setTitle(event.target.value);\n          }}\n        />\n      </label>\n      <label className=\"form__label\">\n        Description:\n        {' '}\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={event => {\n            return setDescription(event.target.value);\n          }}\n        />\n      </label>\n      <label className=\"form__label\">\n        Image URL:\n        {' '}\n        <input\n          type=\"text\"\n          placeholder=\"ImgUrl\"\n          value={imgUrl}\n          onChange={event => {\n            return setImgUrl(event.target.value);\n          }}\n        />\n      </label>\n      <label className=\"form__label\">\n        IMDB URL:\n        {' '}\n        <input\n          type=\"text\"\n          placeholder=\"ImdbUrl\"\n          value={imdbUrl}\n          onChange={event => {\n            return setImdbUrl(event.target.value);\n          }}\n        />\n      </label>\n      <label className=\"form__label\">\n        IMDB Id:\n        {' '}\n        <input\n          type=\"text\"\n          placeholder=\"ImdbId\"\n          value={imdbId}\n          onChange={event => {\n            return setImdbId(event.target.value);\n          }}\n        />\n      </label>\n      {formError\n        && <p className=\"form__error\">The form must be filled</p>}\n      <button\n        type=\"submit\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}